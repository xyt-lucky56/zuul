server.port=2000

#zuul.sensitive-headers= Access-Control-Allow-Origin
#zuul.ignored-headers=Access-Control-Allow-Credentials, Access-Control-Allow-Origin

#zuul.sensitiveHeaders=Cookie,Set-Cookie

#zuul.sensitive-headers=
#zuul.ignored-headers='*'
#zuul.add-host-header= true
#zuul.add-proxy-headers=true

#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://101.201.101.138:10001/test02?useUnicode=true&characterEncoding=utf8&useSSL=true
#spring.datasource.username=
#spring.datasource.password=
#spring.datasource.druid.initial-size=5
#spring.datasource.druid.min-idle=5
#spring.datasource.druid.max-active=20
#spring.datasource.druid.max-wait=60000
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#
### mybatis配置
#mybatis.mapper-locations=classpath:/mapper/*.xml

# 打印sql
#logging.level.sql=true  //2.0以上版本用法
#logging.level.com.lh.dao=debug

# redis

#spring.devtools.restart.enabled=false
#spring.redis.database=10
#spring.redis.host=101.201.101.138
#spring.redis.port=10000
#spring.redis.password=redisredis
#spring.redis.timeout=6000
#spring.redis.pool.max-active=50
#spring.redis.pool.max-wait= -1
#spring.redis.pool.max-idle= 10
#spring.redis.pool.min-idle= 5


#zuul超时设置
#zuul.host.connect-timeout-millis=6000
#zuul.host.socket-timeout-millis=15000
#zuul.SendErrorFilter.post.disable=true
#zuul.retryable=false
#zuul.add-host-header=true
#ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
#ribbon.ConnectTimeout=4000
#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
#ribbon.ReadTimeout=6000
#对所有操作请求都进行重试
#ribbon.OkToRetryOnAllOperations=false
#对当前实例的重试次数
#ribbon.MaxAutoRetries=1
#切换实例的重试次数
#ribbon.MaxAutoRetriesNextServer=1
#对所有操作请求都进行重试
#断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间。
#服务的返回时间大于ribbon的超时时间，会触发重试
##默认=1000，太小
#hystrix.command.default.execution.timeout.enabled = true
#hystrix.command.dictionary-aggregate.execution.timeout.enabled = false
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=900000000
#hystrix.command.DICTIONARY-AGGREGATE.execution.isolation.thread.timeoutInMilliseconds=900000000
#hystrix.command.dictionary-aggregate.execution.isolation.thread.timeoutInMilliseconds=9018
#hystrix.command.dictionary-aggregate.execution.isolation.thread.interruptOnTimeout=false


#熔断器启用
#feign.hystrix.enabled=true
#hystrix.command.default.execution.timeout.enabled=true
#feign.httpclient.connection-timeout=2000
#feign.httpclient.connection-timer-repeat=5000

#断路器详细设置
#当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）
#hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#短路多久以后开始尝试是否恢复，默认5s）
#hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5
#出错百分比阈值，当达到此阈值后，开始短路。默认50%）
#hystrix.command.default.circuitBreaker.errorThresholdPercentage=50%
# 单独设置某个服务的超时时间，会覆盖其他的超时时间限制，服务的名称已注册中心页面显示的名称为准，超时时间不可大于断路器的超时时间
#service-a.ribbon.ReadTimeout=60000
#service-a.ribbon.ConnectTimeout=60000

#重试机制
#该参数用来开启重试机制，默认是关闭
#spring.cloud.loadbalancer.retry.enabled=false

#spring.data.mongodb.uri=mongodb://192.168.1.9:27017/LhMongodb
